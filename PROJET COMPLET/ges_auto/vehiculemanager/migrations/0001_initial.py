# Generated by Django 5.1.6 on 2025-02-15 22:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immatriculation', models.CharField(help_text='Format: AA-123-BB', max_length=50, unique=True, verbose_name='Immatriculation')),
                ('marque', models.CharField(max_length=255, verbose_name='Marque')),
                ('modele', models.CharField(max_length=255, verbose_name='Modèle')),
                ('annee', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2026)], verbose_name='Année')),
                ('categorie', models.CharField(choices=[('Transporteur de marchandise', 'Transporteur de marchandise'), ('Ramasseur de déchet', 'Ramasseur de déchet'), ('Transporteur de passagers', 'Transporteur de passagers'), ('Autre', 'Autre')], max_length=255, verbose_name='Catégorie')),
                ('status', models.CharField(choices=[('Disponible', 'Disponible'), ('En maintenance', 'En maintenance'), ('En service', 'En service'), ('Hors service', 'Hors service')], default='Disponible', max_length=50, verbose_name='Statut')),
                ('date_acquisition', models.DateField(blank=True, null=True, verbose_name="Date d'acquisition")),
                ('date_derniere_maintenance', models.DateField(blank=True, null=True, verbose_name='Date de dernière maintenance')),
                ('kilometrage', models.PositiveIntegerField(blank=True, help_text='En kilomètres', null=True, verbose_name='Kilométrage')),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicules/', verbose_name='Image du véhicule')),
                ('description', models.TextField(blank=True, help_text='Description ou notes supplémentaires', verbose_name='Description')),
                ('date_enregistrement', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Véhicule',
                'verbose_name_plural': 'Véhicules',
                'ordering': ['-date_enregistrement'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_maintenance', models.DateField(verbose_name='Date de maintenance')),
                ('type', models.CharField(choices=[('Révision régulière', 'Révision régulière'), ('Réparation', 'Réparation'), ('Entretien préventif', 'Entretien préventif'), ('Changement pièces', 'Changement pièces'), ('Autre', 'Autre')], max_length=50, verbose_name='Type de maintenance')),
                ('description', models.TextField(blank=True, help_text='Description détaillée des travaux effectués', verbose_name='Description')),
                ('cout', models.DecimalField(decimal_places=2, help_text='Coût total en euros', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Coût')),
                ('status', models.CharField(choices=[('En attente', 'En attente'), ('En cours', 'En cours'), ('Terminé', 'Terminé'), ('Annulé', 'Annulé')], default='En attente', max_length=50, verbose_name='Statut')),
                ('pieces_changees', models.TextField(blank=True, help_text='Liste des pièces remplacées', verbose_name='Pièces changées')),
                ('kilometrage_actuel', models.PositiveIntegerField(help_text='Kilométrage au moment de la maintenance', verbose_name='Kilométrage actuel')),
                ('date_prochaine_maintenance', models.DateField(blank=True, help_text='Date recommandée pour la prochaine maintenance', null=True, verbose_name='Date prochaine maintenance')),
                ('technicien', models.CharField(blank=True, help_text="Nom du technicien ou de l'entreprise", max_length=100, verbose_name='Technicien')),
                ('facture', models.FileField(blank=True, null=True, upload_to='maintenances/factures/', verbose_name='Facture')),
                ('date_enregistrement', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='vehiculemanager.vehicule', verbose_name='Véhicule')),
            ],
            options={
                'verbose_name': 'Maintenance',
                'verbose_name_plural': 'Maintenances',
                'ordering': ['-date_maintenance'],
            },
        ),
        migrations.CreateModel(
            name='Carburant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prise', models.DateField(verbose_name='Date de prise')),
                ('quantite', models.DecimalField(decimal_places=2, help_text='Quantité en litres', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantité (L)')),
                ('cout_unitaire', models.DecimalField(decimal_places=3, help_text='Prix par litre en euros', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Coût unitaire')),
                ('cout_total', models.DecimalField(decimal_places=2, help_text='Coût total en euros', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Coût total')),
                ('type_carburant', models.CharField(choices=[('Essence', 'Essence'), ('Diesel', 'Diesel'), ('GPL', 'GPL'), ('Électrique', 'Électrique'), ('Autre', 'Autre')], max_length=50, verbose_name='Type de carburant')),
                ('station', models.CharField(max_length=255, verbose_name='Station')),
                ('kilometrage_actuel', models.PositiveIntegerField(help_text='Kilométrage au moment du plein', verbose_name='Kilométrage actuel')),
                ('plein_complet', models.BooleanField(default=True, help_text='Cocher si le réservoir a été rempli complètement', verbose_name='Plein complet')),
                ('commentaire', models.TextField(blank=True, help_text='Commentaires éventuels', verbose_name='Commentaire')),
                ('facture', models.FileField(blank=True, null=True, upload_to='carburants/factures/', verbose_name='Facture')),
                ('date_enregistrement', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carburants', to='vehiculemanager.vehicule', verbose_name='Véhicule')),
            ],
            options={
                'verbose_name': 'Carburant',
                'verbose_name_plural': 'Carburants',
                'ordering': ['-date_prise'],
            },
        ),
    ]
